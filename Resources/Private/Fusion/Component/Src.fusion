prototype(Carbon.Plausible:Component.Src) < prototype(Neos.Fusion:Component) {
    reverseProxy = ${null}
    host = ${null}
    host.@process.fallback = ${value || 'plausible.io'}
    outboundLinks = ${null}
    fileDownloads = ${null}
    hashBasedRouting = ${null}
    compat = ${null}
    local = ${null}
    manual = ${null}
    pageviewProps = ${null}
    taggedEvents = ${null}
    revenue = ${null}

    renderer = Neos.Fusion:Join {
        protocol = ${props.reverseProxy ? null : 'https://'}
        host = ${props.reverseProxy ? null : props.host}
        filename = Neos.Fusion:Case {
            useReverseProxy {
                condition = ${props.reverseProxy}
                renderer = '/~plausible'
            }
            ownHost {
                condition = ${props.host != 'plausible.io'}
                renderer = '/js/index'
            }
            default {
                condition = true
                renderer = '/js/plausible'
            }
        }
        // Order based on https://github.com/plausible/analytics/blob/master/tracker/compile.js
        hashBasedRouting = ${props.hashBasedRouting ? '.hash' : ''}
        outboundLinks = ${props.outboundLinks ? '.outbound-links' : ''}
        compat = ${props.compat ? '.compat' : ''}
        local = ${props.local ? '.local' : ''}
        manual = ${props.manual ? '.manual' : ''}
        fileDownloads = ${props.fileDownloads ? '.file-downloads' : ''}
        pageviewProps = ${Carbon.Array.length(props.pageviewProps) ? '.pageview-props' : ''}
        taggedEvents = ${props.taggedEvents ? '.tagged-events' : ''}
        revenue = ${props.revenue ? '.revenue' : ''}
        fileextension = '.js'
    }
}
